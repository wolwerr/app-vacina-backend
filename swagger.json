{
  "openapi": "3.0.3",
  "info": {
    "title": "Projeto Alergia",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001"
    }
  ],
  "tags": [
    {
      "name": "doctor",
      "description": "Doctor´s endpoints"
    },
    {
      "name": "patient",
      "description": "Patient´s endpoints"
    }
  ],
  "paths": {
    "/doctor": {
      "post": {
        "tags": [
          "doctor"
        ],
        "description": "Add a doctor.",
        "operationId": "createDoctor",
        "requestBody": {
          "description": "Doctor´s information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Doctor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Doctor already exists."
          }
        }
      },
      "get": {
        "tags": [
          "doctor"
        ],
        "description": "List all doctors.",
        "operationId": "getDoctors",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "List not found."
          }
        }
      }
    },
    "/doctor/{id}": {
      "put": {
        "tags": [
          "doctor"
        ],
        "description": "Update doctor´s information.",
        "operationId": "updateDoctor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Doctor´s ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New information data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Doctor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Doctor not found."
          }
        }
      },
      "delete": {
        "tags": [
          "doctor"
        ],
        "description": "Delete a doctor.",
        "operationId": "deleteDoctor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Doctor´s ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Doctor not found."
          },
          "410": {
            "description": "Doctor deleted."
          }
        }
      },
      "get": {
        "tags": [
          "doctor"
        ],
        "description": "Find a doctor by ID.",
        "operationId": "getDoctorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Doctor´s ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Doctor not found."
          }
        }
      }
    },
    "/doctor/search": {
      "get": {
        "tags": [
          "doctor"
        ],
        "description": "Find a doctor by name.",
        "operationId": "getDoctorByName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Doctor´s name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Doctor not found."
          }
        }
      }
    },
    "/login/doctor": {
      "post": {
        "tags": [
          "doctor"
        ],
        "description": "Login a doctor.",
        "operationId": "loginDoctor",
        "requestBody": {
          "description": "Doctor´s information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid information."
          }
        }
      }
    },
    "/patient": {
      "post": {
        "tags": [
          "patient"
        ],
        "description": "Add a patient.",
        "operationId": "createPatient",
        "requestBody": {
          "description": "Patient´s information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patient"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                }
              }
            }
          },
          "409": {
            "description": "Patient already exists."
          }
        }
      },
      "get": {
        "tags": [
          "patient"
        ],
        "description": "List all patients.",
        "operationId": "getPatients",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "List not found."
          }
        }
      }
    },
    "/patient/{id}": {
      "put": {
        "tags": [
          "patient"
        ],
        "description": "Update patient´s information.",
        "operationId": "updatePatient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Patient´s ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New information data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found."
          }
        }
      },
      "delete": {
        "tags": [
          "patient"
        ],
        "description": "Delete a patient.",
        "operationId": "deletePatient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Patient´s ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Patient not found."
          },
          "410": {
            "description": "Patient deleted."
          }
        }
      },
      "get": {
        "tags": [
          "patient"
        ],
        "description": "Find a patient by ID.",
        "operationId": "getPatientById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Patient´s ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found."
          }
        }
      }
    },
    "/patient/search": {
      "get": {
        "tags": [
          "patient"
        ],
        "description": "Find a patient by name.",
        "operationId": "getPatientByName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Patient´s name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found."
          }
        }
      }
    },
    "/login/patient": {
      "post": {
        "tags": [
          "patient"
        ],
        "description": "Login a patient.",
        "operationId": "loginPatient",
        "requestBody": {
          "description": "Patient´s information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid information."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Doctor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mason B."
          },
          "email": {
            "type": "string",
            "example": "masonb@email.com"
          },
          "password": {
            "type": "string",
            "example": "450Eht@6"
          },
          "role": {
            "type": "string",
            "example": "doctor"
          }
        }
      },
      "DoctorResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Mason B."
          },
          "email": {
            "type": "string",
            "example": "masonb@email.com"
          }
        }
      },
      "Patient": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mason B."
          },
          "email": {
            "type": "string",
            "example": "masonb@email.com"
          },
          "password": {
            "type": "string",
            "example": "450Eht@6"
          },
          "role": {
            "type": "string",
            "example": "patient"
          }
        }
      },
      "PatientUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mason B."
          },
          "email": {
            "type": "string",
            "example": "masonb@email.com"
          },
          "password": {
            "type": "string",
            "example": "450Eht@6"
          }
        }
      },
      "PatientResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Mason B."
          },
          "email": {
            "type": "string",
            "example": "masonb@email.com"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "masonb@email.com"
          },
          "password": {
            "type": "string",
            "example": "450Eht@6"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Mason B."
          },
          "role": {
            "type": "string",
            "example": "doctor"
          }
        }
      }
    }
  }
}